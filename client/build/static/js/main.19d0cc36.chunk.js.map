{"version":3,"sources":["component/LogOut.js","component/BigContext.js","component/Dashboard.js","component/Bob.js","component/Card.js","component/List.js","component/Registration.js","component/Login.js","component/Wrapper.js","component/Add.js","component/AddBig.js","App.js","serviceWorker.js","index.js"],"names":["LogOut","className","onClick","axios","get","withCredentials","then","response","localStorage","clear","navigate","catch","error","console","log","BigContext","createContext","Dashboard","context","useContext","useEffect","getItem","setState","data","style","color","state","firstName","class","to","Bob","props","id","onDrop","e","preventDefault","card_information","JSON","parse","dataTransfer","getData","temp","boards","boardIndex","column","items","push","index","splice","put","_id","setRefresh","refresh","onDragOver","children","Card","onDragStart","target","setData","stringify","stopPropagation","draggable","List","deleteHandler","item","backgroundColor","map","key","setBoard","changeBoard","name","aria-hidden","deleteBoardHandler","board","marginTop","marginRight","column1","textAlign","Date","duedate","getTime","column2","column3","column4","Registration","useState","lastName","email","password","confirmPassword","fState","setFState","errorState","setErrorState","onCH","value","onSubmit","post","errors","message","setItem","type","onChange","Login","Wrapper","Add","formState","setFormState","changeHadeler","length","AddBig","App","path","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19d0cc36.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { navigate } from '@reach/router';\nimport './style.css'\nfunction LogOut() {\n    const logout = () => {\n        axios.get(`http://localhost:2030/api/v3/logout`, { withCredentials: true })\n        .then(response => {\n            localStorage.clear()\n            navigate(\"/\")\n        })\n        .catch(error => console.log(error))\n    }\n    return (\n        <div>\n             <a className=\"logout\" onClick={logout}>Log out</a>\n        </div>\n    )\n}\n\nexport default LogOut\n","import { createContext } from 'react';\nconst BigContext = createContext();\nexport default BigContext;","import React, { useState ,useEffect,useContext} from \"react\";\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\nimport {Link} from '@reach/router';\nimport LogOut from './LogOut';\nimport BigContext from './BigContext';\nimport './style1.css';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Dashboard=()=> {\n  const context = useContext(BigContext)\n  useEffect(() => {\n    if (localStorage.getItem(\"userid\") === null) {\n        navigate(\"/\")\n    } else {\n        console.log(localStorage.getItem(\"userid\"))\n        axios.get(`http://localhost:2030/api/v3/readOne/${localStorage.getItem(\"userid\")}`, { withCredentials: true })\n            .then(response => context.setState({ ...response.data }))\n            .catch(error => console.log(error))\n    }\n\n\n}, [])\n\n\n\n\n\n\n\n\n return(\n   <div className=\"body \"> \n      <div className=\"row\">\n       <div className=\"col-sm-9 col-ml-9 col-lg-9  lagout\"> <LogOut /></div></div>\n     <div className=\"dashBoard\">\n     <h3>Welcome to Back  <span style={{color:\"rgb(113, 120, 123)\"}}>{context.state.firstName}</span>! </h3>\n      \n     <div class=\"row\">\n  <div className=\"col-sm-6 col-ml-6 col-lg-6\"> <button ><Link  className=\"link\" to=\"/list\"> Check your list</Link></button></div>\n  <div className=\"col-sm-6 col-ml-6 col-lg-6\"> <button  > <Link className=\"link\" to =\"/addboard\">add new Board</Link></button></div>\n  </div>\n      </div>\n    </div>\n\n )\n\n  }\nexport default Dashboard;\n","import React,{useEffect,useState,useContext} from 'react'\nimport axios from 'axios';\nimport BigContext from './BigContext';\nimport {navigate ,Link} from '@reach/router';\nimport './style.css';\n\nfunction Bob(props) {\n  const context = useContext(BigContext) //need to use usecontext inorder to send state form list page\n  const drop = e =>{\n   e.preventDefault();\n   const card_information=JSON.parse(e.dataTransfer.getData('card_id'));\n   const temp = {...context.state}\n   //add card_information.index(our card) to this culumn\n   temp.boards[props.boardIndex][props.column].items.push(temp.boards[props.boardIndex][card_information.column].items[card_information.index])\n   //remove the same card form the old column which card was there\n   temp.boards[props.boardIndex][card_information.column].items.splice(card_information.index,1)\n\n   axios.put(`http://localhost:2030/api/v3/updateOne/${context.state._id}`, temp, {withCredentials:true})\n   .then(response => {\n       context.setRefresh(!context.refresh)\n   })\n   .catch(error => console.log(error))\n  //  const card = document.getElementById(card_id);\n  //  card.style.display='block';\n  //  const tempcard=e.target.appendChild(card);\n   \n   //up to line 15 is his code \n\n\n  //  console.log(tempcard)\n  //  const temp={...context.state}\n  //  console.log(context.state)\n  //  const column=props.id\n  //  temp.column.items.push()\n   \n \n \n }\n const dargOver= e =>{\n  e.preventDefault();\n }\n\n    return (\n        <div  \n           id={props.id}\n           className={props.className}\n           onDrop={drop}\n           onDragOver={dargOver} >\n       \n            {props.children}\n\n\n            \n        </div>\n    )\n}\n\nexport default Bob\n","import React from 'react'\nimport BigContext from './BigContext';\nfunction Card(props) {\n    const dragStart=e=>{\n        const target=e.target;\n        e.dataTransfer.setData('card_id',JSON.stringify({column:props.column, index:props.index}));\n        // setTimeout(() => {\n        //   target.style.display=\"none\"  ;\n        // }, 0);\n    }\n    const dragOver=e=>{\n        e.stopPropagation();\n    }\n    return (\n        <div\n           id={props.index}\n           className={props.className}\n           onDragStart={dragStart}\n           onDragOver={dragOver}\n           draggable={props.draggable}\n        \n        >\n            {props.children}\n        </div>\n    )\n}\n\nexport default Card\n","import React, { useEffect, useState,useContext } from 'react'\nimport Bob from './Bob';\nimport Card from './Card';\nimport axios from 'axios';\nimport { navigate,Link } from '@reach/router';\nimport LogOut from './LogOut';\nimport './style.css'\nimport BigContext from './BigContext';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'font-awesome/css/font-awesome.min.css';\n\nfunction List() {\n\n    const context = useContext(BigContext)\n   \n    useEffect(() => {\n        if (localStorage.getItem(\"userid\") === null) {\n            navigate(\"/\")\n        } else {\n           \n            axios.get(`http://localhost:2030/api/v3/readOne/${localStorage.getItem(\"userid\")}`, { withCredentials: true })\n                .then(response => context.setState({ ...response.data }))\n                .catch(error => console.log(error))\n        }\n\n\n    }, [context.refresh])\n\n    const changeBoard = (e, index) => {\n        // change board here\n        context.setBoard(index)\n\n    }\n    const deleteHandler=(e,item,column,boardIndex,index)=>{\n        e.preventDefault();\n       \n        const temp = {...context.state}\n        console.log(temp.boards[boardIndex][column])\n        temp.boards[boardIndex][column].items.splice(index,1 )\n        axios.put(`http://localhost:2030/api/v3/updateOne/${context.state._id}`,temp, {withCredentials:true})\n        .then(response => {\n            context.setRefresh(!context.refresh)\n        })\n        .catch(error => console.log(error))\n    }\n    const deleteBoardHandler=(e,boardIndex,index)=>{\n        e.preventDefault();\n       \n        const temp = {...context.state}\n        console.log(temp.boards[boardIndex])\n        temp.boards.splice(index,1 )\n        axios.put(`http://localhost:2030/api/v3/updateOne/${context.state._id}`,temp, {withCredentials:true})\n        .then(response => {\n            context.setRefresh(!context.refresh)\n        })\n        .catch(error => console.log(error))\n    }\n    \n\n    return (\n        <div style={{backgroundColor:\"rgb(183, 209, 228)\"}}>\n           \n            {context.state.boards &&\n            <div><div className=\"row\">\n              \n                <div className=\"col-12 col-md-10 col-sm-10  col-ml-10 col-xs-10 boardlist\">\n                    <h4>list of your Board:</h4>\n                    {context.state.boards !=0 ?\n                   \n                    <div>\n                        {context.state.boards.map((item, index) => (\n                            <button  key={index} onClick={(e) =>changeBoard(e,index)}>{item.name}  \n                                <li className=\"fa fa-trash\" aria-hidden=\"true\" onClick={(e) => deleteBoardHandler(e,context.board,index)}></li>\n                            </button>\n                        ))}\n                    </div>\n                    :<p style={{color:\"purple\"}}>First add new Board Please  <Link  to =\"/addboard\">Add</Link></p>\n                       \n                       }\n                    <p>Choose your board  :<Link to =\"/addtask\">add new task on your board</Link></p>\n                </div>\n\n                <div className=\"col-12 col-md-2  col-sm-2  col-ml-2 col-xs-2\">\n                    <div className=\"row \" style={{marginTop:\"90px\" ,marginRight:\"12px\"}}>\n                <div className=\"col-sm-5 col-ml-5 col-lg-5  lagout\" style={{color:\"rgb(0, 56, 96)\"}}> <LogOut /> </div>\n                <div className=\"col-sm-7 col-ml-7 col-lg-7 dash\" ><i className=\"fa fa-home fa-home\" style={{color:\"rgb(0, 56, 96)\"}}></i><Link  style={{color:\"rgb(0, 56, 96)\"}} to=\"/dashboard\" >DashBoard</Link></div></div>\n    \n                  \n               </div>\n                </div>\n                <div style={{marginTop:\"20px\"}}>\n                <main className=\"flexbox\">\n                    <Bob boardIndex={context.board} id=\"column1\" className=\"board\" column={\"column1\"}>\n                        <h2>Request</h2>\n                        {context.state.boards[context.board] && context.state.boards[context.board].column1 && context.state.boards[context.board] && context.state.boards[context.board].column1.items.map((item, index) => (\n                            <div key={index}>\n                                <Card column={\"column1\"} index={index} className=\"card\" draggable=\"true\">\n                                    \n                                <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\" style={{textAlign:\"right\",marginTop:\"0px\"}}>   <li className=\"fa fa-trash\" aria-hidden=\"true\" onClick={(e) =>deleteHandler(e,item,\"column1\",context.board,index)}></li></div> \n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\"><b>Task Name: </b>{item.name}</div> \n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\"><b>Due Date: </b> <span style={{color: new Date(item.duedate).getTime() - new Date().getTime() < 0 ? 'red' : 'rgb(0, 56, 96)'}}>{item.duedate}</span></div>  \n                                  </div>\n                                    \n                                    \n                                    </Card> </div>\n\n\n                        ))}\n                    </Bob>\n                    <Bob boardIndex={context.board} id=\"column2\" className=\"board\" column={\"column2\"}>\n\n                        <h2>Started</h2>\n                        {context.state.boards[context.board] && context.state.boards[context.board].column2 && context.state.boards[context.board] && context.state.boards[context.board].column2.items.map((item, index) => (\n                            <div key={index}>\n                                <Card column={\"column2\"} index={index} className=\"card\" draggable=\"true\">\n                                <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\" style={{textAlign:\"right\",marginTop:\"0px\"}}>   <li className=\"fa fa-trash\" aria-hidden=\"true\" onClick={(e) =>deleteHandler(e,item,\"column2\",context.board,index)}></li></div> \n                                <div><b>Task Name: </b>{item.name}</div>     \n                                  </div>\n                                    </Card> </div>\n\n\n                        ))}\n                    </Bob>\n                    <Bob boardIndex={context.board} id=\"column3\" className=\"board\" column={\"column3\"}>\n                        <h2>On process</h2>\n                        {context.state.boards[context.board] && context.state.boards[context.board].column3 && context.state.boards[context.board] && context.state.boards[context.board].column3.items.map((item, index) => (\n                            <div key={index}>\n                          \n                          \n                                <Card column={\"column3\"} index={index} className=\"card\" draggable=\"true\">\n                                    <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\" style={{textAlign:\"right\",marginTop:\"0px\"}}>   <li className=\"fa fa-trash\" aria-hidden=\"true\" onClick={(e) =>deleteHandler(e,item,\"column3\",context.board,index)}></li></div> \n                                <div><b>Task Name: </b>{item.name}</div>     \n                                  </div>\n                                \n                                </Card> </div>\n                                   \n\n                        ))}\n                    </Bob>\n                    <Bob boardIndex={context.board} id=\"column4\" className=\"board\" column={\"column4\"}>\n                        <h2>Done</h2>\n                        {context.state.boards[context.board] && context.state.boards[context.board].column4 && context.state.boards[context.board] && context.state.boards[context.board].column4.items.map((item, index) => (\n                            <div key={index}>\n                                <Card column={\"column4\"} index={index} className=\"card\" draggable=\"true\">\n                                <div className=\"row\">\n                                <div className=\"col-12 col-sm-12 col-ml-12 col-lg-12\" style={{textAlign:\"right\",marginTop:\"0px\"}}>   <li className=\"fa fa-trash\" aria-hidden=\"true\" onClick={(e) =>deleteHandler(e,item,\"column4\",context.board,index)}></li></div> \n                                <div><b>Task Name: </b>{item.name}</div>  \n                                  </div>\n                                \n                                </Card> </div>\n                              \n\n                        ))}\n                    </Bob>\n                </main>\n                </div>\n            </div>\n            }\n       \n\n       \n        </div>\n   \n    )\n}\n\nexport default List\n","import React, {useState} from 'react'\nimport axios from 'axios';\nimport {navigate} from '@reach/router';\nconst Registration = () => {\n    const [fState, setFState] = useState({\n        firstName:\"\",\n        lastName:\"\",\n        email:\"\",\n        password:\"\",\n        confirmPassword:\"\",\n        boards:[]\n    })\n    \n    const [errorState, setErrorState] = useState([])\n    const onSH = (e) => {\n        e.preventDefault();\n        // all axios calls should submit withCredentials:true if you want to use authenticate from backend\n        axios.post('http://localhost:2030/api/v3/register', fState, {withCredentials:true})\n        .then(response => {\n            if(response.data.errors){\n                const temp = []\n                for(let key in response.data.errors) {\n                    temp.push(response.data.errors[key].message)\n                }\n                setErrorState(temp)\n            } else {\n                localStorage.setItem(\"userid\", response.data._id)\n                navigate('/dashboard')\n            }\n        })\n        .catch(error => console.log(error))\n    }\n    const onCH = (e) => {\n        setFState({\n            ...fState,\n            [e.target.name]:e.target.value\n        })\n    }\n    return (\n        <div>\n            <h1>Register</h1>\n            {errorState.map((item, index) => (\n                <p key={index}>{item}</p>\n            ))}\n            <form onSubmit={onSH}>\n                <p>First Name</p>\n                <input type=\"text\" name=\"firstName\" onChange={onCH}/>\n                <p>Last Name</p>\n                <input type=\"text\" name=\"lastName\" onChange={onCH}/>\n                <p>Email</p>\n                <input type=\"email\" name=\"email\" onChange={onCH}/>\n                <p>Password</p>\n                <input type=\"password\" name=\"password\" onChange={onCH}/>\n                <p>Confirm Password</p>\n                <input type=\"password\" name=\"confirmPassword\" onChange={onCH}/>\n               <p> <button type=\"submit\">Register</button></p>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Registration\n","import React, {useState} from 'react'\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst Login = (props) => {\n    const [fState, setFState] = useState({\n        email:\"\",\n        password:\"\"\n    })\n    const [errorState, setErrorState] = useState(\"\")\n    const onSH = (e) => {\n        e.preventDefault();\n        // all axios calls should submit withCredentials:true if you want to use authenticate from backend\n        axios.post('http://localhost:2030/api/v3/login', fState, {withCredentials:true})\n        .then(response => {\n            if(response.data.errors){\n                setErrorState(response.data.errors)\n            } else {\n                localStorage.setItem(\"userid\", response.data._id)\n                navigate('/dashboard')\n            }\n            \n        })\n        .catch(error => console.log(error))\n    }\n    const onCH = (e) => {\n        setFState({\n            ...fState,\n            [e.target.name]:e.target.value\n        })\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            {errorState}\n            <form onSubmit={onSH}>\n                <p>Email</p>\n                <input type=\"email\" name=\"email\" onChange={onCH}/>\n                <p>Password</p>\n                <input type=\"password\" name=\"password\" onChange={onCH}/>\n               <p> <button type=\"submit\">Login</button></p>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport Registration from './Registration';\nimport Login from './Login';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style1.css';\n\nconst Wrapper = () => {\n    return (\n        <div className=\" body\">\n            <div className=\"row reglog\">\n             <div className=\"col-12 col-sm-6 col-lg-6 col-ml-6 \">\n            <Registration /></div>\n            <div className=\"col-12 col-sm-6 col-lg-6 col-ml-6 \">\n            <Login /></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Wrapper\n","import React, { useState, useEffect, useContext } from 'react'\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\nimport BigContext from './BigContext';\nimport LogOut from './LogOut';\nimport './style.css';\nimport './style1.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nfunction Add() {\n    const context = useContext(BigContext) //need to use usecontext inorder to send state form list page\n\n    const [formState, setFormState] = useState({\n        name: \"\",\n        duedate: \"\"\n    })\n    const [state, setState] = useState({})\n\n    \n    const changeHadeler = (e) => {\n        setFormState({\n            ...formState,\n            [e.target.name]: e.target.value\n        })\n    }\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const temp = { ...context.state }\n        temp.boards[context.board].column1.items.push(formState)\n        axios.put(`http://localhost:2030/api/v3/updateOne/${temp._id}`, temp, {withCredentials:true})\n            .then(response => {\n                console.log(response)\n                if (response.data.errors) {\n\n                    // setErrorState({\n                    //     name: response.data.errors.column1.items.name ? response.data.errors.column1.items.name.message : \"\",\n                    // })\n                } else {\n                    context.setRefresh(!context.refresh)\n                    navigate(\"/list\")\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n\n\n\n\n\n\n    return (\n        <div className=\"body\">\n            <div className=\"row\">\n       <div className=\"col-sm-9 col-ml-9 col-lg-9  lagout\"> <LogOut /> </div>\n       <div className=\"col-sm-3 col-ml-3 col-lg-3 dash\"><i className=\"fa fa-home fa-home\"></i><Link  style={{color:\"rgb(183, 187, 189)\"}} to=\"/dashboard\" >DashBoard</Link></div></div>\n            <div className=\"dashBoard\">\n                {formState.name.length > 0 && formState.name.length < 3 ?\n                    <p>the name has to have 3 min char</p> : <p></p>}\n              \n                <h3>Add a Task</h3>\n                <form  className=\"formtask\" onSubmit={submitHandler} >\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Name Project:</td>\n                                <td><input type=\"text\" name=\"name\" onChange={changeHadeler} /></td>\n                            </tr>\n                            <tr>\n                                <td>due date:</td>\n                                <td><input type=\"date\" name=\"duedate\" onChange={changeHadeler} /></td>\n                            </tr>\n                            <tr>\n                                <td></td>\n                                <td><button className=\"button\" >Add Board</button></td>\n                            </tr>\n\n                        </tbody>\n                    </table>\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Add\n","import React, { useState, useEffect, useContext } from 'react'\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\nimport BigContext from './BigContext';\nimport LogOut from './LogOut';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nfunction AddBig() {\n    const context = useContext(BigContext) //need to use usecontext inorder to send state form list page\n    console.log(context.state)\n    const [formState, setFormState] = useState({\n        name:\"\",\n        column1: {\n            name: \"request\",\n            items: []\n        },\n        column2: {\n            name: \"start\",\n            items: []\n        },\n        column3: {\n            name: \"on process\",\n            items: []\n        },\n        column4: {\n            name: \"done\",\n            items: []\n        }\n    })\n    const [id, setId] = useState(0)\n    const onChangeHandler = (e) => {\n        setFormState({\n            ...formState,\n            [e.target.name]:e.target.value\n        })\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const temp = {...context.state}\n        temp.boards.push(formState)\n        axios.put(`http://localhost:2030/api/v3/updateOne/${temp._id}`, temp, {withCredentials:true})\n        .then(response => {\n            console.log(response)\n            if (response.data.errors) {\n\n                // setErrorState({\n                //     name: response.data.errors.column1.items.name ? response.data.errors.column1.items.name.message : \"\",\n                // })\n            } else {\n                context.setRefresh(!context.refresh)\n                navigate(\"/list\")\n            }\n        })\n        .catch(error => console.log(error))\n    }\n\n    return (\n        <div className=\"body\">\n             <div className=\"row\">\n       <div className=\"col-sm-9 col-ml-9 col-lg-9  lagout\"> <LogOut /> </div>\n       <div className=\"col-sm-3 col-ml-3 col-lg-3 dash\"><i className=\"fa fa-home fa-home\"></i><Link  style={{color:\"rgb(183, 187, 189)\"}} to=\"/dashboard\" >DashBoard</Link></div></div>\n     <div className=\"dashBoard\">\n            <h3>Add a board</h3\n            >\n            <form onSubmit={submitHandler}>\n               Board Name: <input type=\"text\" name=\"name\" onChange={onChangeHandler} />\n                <p><button className=\"button\" >Add Board</button></p>\n\n            </form>\n          \n        </div>\n        </div>\n    )\n}\n\nexport default AddBig\n","import React,{useState} from 'react';\nimport { Router } from '@reach/router'\nimport './App.css';\nimport Dashboard from './component/Dashboard';\nimport List from './component/List';\nimport Wrapper from './component/Wrapper';\nimport Add from './component/Add';\nimport AddBig from './component/AddBig';\nimport BigContext from './component/BigContext';\n\nfunction App() {\n  const [state, setState] = useState({})\n  const [board, setBoard] = useState(0)\n  const [refresh, setRefresh] = useState(false)\n  return (\n    <div>\n      <Router>\n        <Wrapper path=\"/\" />\n   \n        </Router>\n        <BigContext.Provider value={{ state, setState, refresh, setRefresh, board, setBoard }}>\n        <Router>\n        <Dashboard path=\"/dashboard\" />\n        <List path=\"/list\" />\n        <Add path =\"/addtask\"/>\n        <AddBig path =\"/addboard\"/>\n        </Router>\n        </BigContext.Provider>\n    \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}